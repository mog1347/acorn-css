$responsive-suffix: "@";
$pseudo-class-suffix: ":";
$namespace: "k";

@function find-pseudo-class-name() {

}

@function class-name($class,$responsive-name: null,$pseudo-class-name: null, $namespace: $namespace) {
    @if breakpoint-width($responsive-name) == null {
        $responsive-name: null;
    }
    @if $responsive-name == null and $pseudo-class-name == null {
        @return "#{$namespace}-#{$class}";
    } @else if $responsive-name == null and $pseudo-class-name != null {
        @return "#{$pseudo-class-name}\\#{$pseudo-class-suffix}#{$namespace}-#{$class}";
    } @else if $responsive-name != null and $pseudo-class-name == null {
        @return "#{$responsive-name}\\#{$responsive-suffix}#{$namespace}-#{$class}";
    } @else {
        @return "#{$responsive-name}\\#{$responsive-suffix}#{$pseudo-class-name}\\#{$pseudo-class-suffix}#{$namespace}-#{$class}";
    }
}

@mixin class-content($class, $responsive-name: null, $pseudo-class-name: null, $namespace: $namespace) {
    .#{class-name($class, $responsive-name, $pseudo-class-name, $namespace)} {
        @content;
    }
}

@function str-split($string, $separator) {
    $split-arr: ();
    $index: str-index($string, $separator);

    @while $index != null {
        $item: str-slice($string, 1, $index - 1);
        $split-arr: append($split-arr, $item);
        $string: str-slice($string, $index + 1);
        $index: str-index($string, $separator);
    }

    $split-arr: append($split-arr, $string);

    @return $split-arr;
}

@function map-get-path($map, $path) {
    $keys: str-split($path, ".");
    $index: 0;
    $map-loop: $map;

    @while nth($keys,$index) != null {
        $map-loop: map-get($map-loop, nth($keys, $index));
        $index: $index+1;
    }
    @return $map-loop;
}